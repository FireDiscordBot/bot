MISSING_PERMISSIONS_USER, MISSING_PERMISSIONS_CLIENT needs to give joined string

ANTI_CURRENT_OPTIONS needs to give ${options
.map(([name, enabled]) =>
enabled
? `${constants.emojis.success} {{name}}`
: `${constants.emojis.error} {{name}}`
)
.join("\n")}

AUTOROLE_ENABLED needs to give ${
      delay ? "first message" : "join"
    }

MODERATORS_REMOVED needs to give joined string

BAN_SUCCESS, BAN_SEMI_SUCCESS, BLOCK_SUCCESS, DERANK_SUCCESS, DERANK_FAILED, KICK_SUCCESS, MUTE_SUCCESS, MUTE_SEMI_SUCCESS, PUBLIC_ENABLED_LOG, PUBLIC_DISABLED_LOG, UNBAN_SUCCESS, UNBLOCK_SUCCESS, UNMUTE_UNKNOWN_REMOVED, UNMUTE_SUCCESS, WARN_SUCCESS, WARN_FAIL needs to handle emojis outside
REACTIONROLE_CONFIRMATION needs to pass in success and error emojis as {{success}} and {{error}}

CHANNELCREATELOG_AUTHOR needs to titleCase channel type

DEBUG_PERMS_FAIL needs to be split into DEBUG_PERMS_FAIL_USER & DEBUG_PERMS_FAIL_CLIENT

DEBUG_MUTE_BYPASS needs to give joined string

DEBUG_ISSUES needs to be split into DEBUG_ISSUES_FOUND & DEBUG_NO_ISSUES

EIGHTBALL_ANSWER needs to handle random outside

EMOJILOCK_SUCCESS needs to be split into EMOJILOCK_SUCCESS & EMOJILOCK_DISABLED

GUILD_CREATED_AT needs to be split into GUILD_CREATED_AT & GUILD_CREATED_BY

HELP_CREDITS_VALUE needs to have links separated

MC_LOG_HASTE needs diff removed

LANGUAGE_COMMAND_CURRENT needs to give language list

LANGUAGE_COMMAND_HELLO needs to be split into LANGUAGE_COMMAND_HELLO_USER & LANGUAGE_COMMAND_HELLO_GUILD

LINKFILTER_FILTER_LIST/LINKFILTER_SET needs to give joined string

LOCKDOWN_FINISH needs to be split into LOCKDOWN_FINISH & LOCKDOWN_FAILED

LOCKDOWN_FAILED needs to give joined string

LOCKDOWN_END_FAIL needs to give joined string

LOGIGNORE_LIST_CURRENT needs to be split into LOGIGNORE_LIST_CURRENT and LOGIGNORE_LIST_NONE

LOGIGNORE_LIST_CURRENT needs to give joined string

LYRICS_NOT_FOUND & MEME_NOT_FOUND no longer take an argument

MSGDELETELOG_DESCRIPTION needs to be split into MSGDELETELOG_DESCRIPTION & MSGDELETELOG_DESCRIPTION_REPLY

MSGDELETELOG_ACTIVITY needs to provide type

PLONK_FORBIDDEN needs to provide localised permission

PLONK_SUCCESS needs to be split into PLONK_SUCCESS and UNPLONK_SUCCESS

PREFIXES_CURRENT needs to be split into PREFIXES_CURRENT_MULTI & PREFIXES_CURRENT_SINGLE
PREFIXES_CURRENT_MULTI needs to provide joined string

PREFIX_REMOVED needs to be split into PREFIX_REMOVED_RESET, PREFIX_REMOVED_SINGLE, PREFIX_REMOVED_MULTI

PREFIX_REMOVE_SINGLE renamed to PREFIX_REMOVE_ONLY

PREFIX_REMOVE needs to be split into PREFIX_REMOVE_RESET, PREFIX_REMOVE_SINGLE, PREFIX_REMOVE_MULTI

PREFIX_ADDED needs to be split into PREFIX_ADDED_SINGLE, PREFIX_ADDED_MULTI

REDIRECT_CREATED needs to provide full url as {{redirect}}

REMINDER_MESSAGE needs to be split into REMINDER_MESSAGE_UNKNOWN & REMINDER_MESSAGE_LINKED

REMINDER_CREATED needs to be split into REMINDER_CREATED_SINGLE & REMINDER_CREATED_MULTI
REMINDER_CREATED_SINGLE needs to pass success as {{time}}
REMINDER_CREATED_MULTI needs to pass `success.map((s) => "- " + s).join("\n")` as {{times}}

DELREMIND_CONFIRM needs to pass `reminder.date.toLocaleString(lang.id)` as {{date}}

ROLEPERSIST_MODLOG_REASON needs to be split into ROLEPERSIST_MODLOG_REASON & ROLEPERSIST_REMOVE_MODLOG_REASON
ROLEPERSIST_MODLOG_REASON needs to give joined string

ROLEPERSIST_SUCCESS needs to be split into ROLEPERSIST_SUCCESS & ROLEPERSIST_REMOVE
ROLEPERSIST_SUCCESS needs to give joined string

SLOWMODE_FAILED, SLOWMODE_GLOBAL_FAIL_SOME needs to give joined string

USER_SNOWFLAKE_BELONGS_TO needs to be split into USER_SNOWFLAKE_BELONGS_TO & USER_SNOWFLAKE_BELONGS_TO_EXTRA

PERMROLES_CURRENT_ITEM needs to be split into PERMROLES_CURRENT_ITEM_ALLOW, PERMROLES_CURRENT_ITEM_DENY & PERMROLES_CURRENT_ITEM_COMBINED
all of the above need to give joined strings

PREMIUM_GUILDS_UPDATED needs to provide amount as {{amount}} & joined string for servers as {{servers}}

PREMIUM_LIMIT_REACHED needs to provide joined string for servers as {{current}}

TICKET_CHANNEL_TOPIC needs to be split into TICKET_CHANNEL_TOPIC & TICKET_SUBJECT_CHANNEL_TOPIC

TICKET_THREAD_RENAME needs to handle markdown outside

VANITYURL_CREATED needs to provide full url as {{vanity}}
























// FIX BELOW
"FILTEREXCL_LIST_SOME_REMOVED": (mentions: string[], removed: string[]) =>
    mentions.length
      ? `Currently excluded from filtering ${
          mentions.length > 1 ? "are" : "is"
        }:\n${mentions.join(
          ", "
        )}\n\nI have also removed some items from the exclusion list due to not being found (member left, role/channel deleted):\n${removed.join(
          ", "
        )}`
      : `I have reset the filter exclusion list due to some items from the exclusion list (${removed.join(
          ", "
        )}) not being found (member left, role/channel deleted)",
  "FILTEREXCL_SET_SOME_REMOVED": (mentions: string[], removed: string[]) =>
    mentions.length
      ? `Successfully set filter exclusion list to:\n${mentions.join(
          ", "
        )}\n\nI have also removed some items from the exclusion list due to not being found (member left, role/channel deleted):\n${removed.join(
          ", "
        )}`
      : `I have reset the filter exclusion list due to the remaining items on the exclusion list (${removed.join(
          ", "
        )}) not being found (member left, role/channel deleted)",
  "FILTEREXCL_LIST": (mentions: string[], removed: string[]) =>
    mentions.length
      ? `Currently excluded from filtering ${
          mentions.length > 1 ? "are" : "is"
        }:\n${mentions.join(", ")}`
      : "No members, roles or channels are excluded from the filter. Only moderators will bypass link filtering",
  "FILTEREXCL_SET": (mentions: string[], removed: string[]) =>
    mentions.length
      ? `Successfully set filter exclusion list to:\n${mentions.join(
          ", "
        )}`
      : "Successfully reset filter exclusion list.",
// FIX ABOVE